# https://docs.docker.com/compose/compose-file/compose-file-v2/#extension-fields
# https://yaml.org/type/merge.html
version: '2.4'
services:

  # app: is a convenience tag to be used locally if you want to start all app hosts at once.
  #   example: docker-compose up -d app
  app:
    image: alpine
    container_name: app-datacatalog
    command: ["sh", "-c", "echo This is only a shortcut to start all app hosts at once."]
    depends_on:
      - datacatalog
      - datacatalog-messaging
      - datacatalog-jobs

  # deps: is a convenience tag to be used locally for "F5" development
  #   example: docker-compose up -d deps
  deps:
    container_name: deps-datacatalog
    image: alpine:$ALPINE_LABEL
    entrypoint: ["sh", "-c", "echo This is only a shortcut to start all dependencies at once."]
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      distribute-grants:
        condition: service_started
      authn:
        condition: service_healthy
      shell:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      elasticsearch-functionaltest:
        condition: service_healthy
      elasticsearch-webtest:
        condition: service_healthy
      elasticsearch-messagingtest:
        condition: service_healthy
      elasticsearch-jobstest:
        condition: service_healthy


  # shared container, but we can alter its deps to run after migrations for this application
  distribute-grants:
    depends_on:
      datacatalog-migrations:
        condition: service_healthy

  # init container
  # note: since this service extends builder, a lot of yaml sections (including environment) are inherited from shared deps
  datacatalog-migrations:
    extends:
      service: builder
    build:
      target: release
    container_name: datacatalog-migrations
    image: ${RL_DOCKER_REPO_BASE}/${RL_APP_NAME}:${RL_APP_TAG}
    entrypoint: ["sh", "-c", "rm -f /app/$$APP_ENTRYPOINT/success && ./run_app.sh && touch /app/$$APP_ENTRYPOINT/success; sleep infinity"]
    environment:
      - APP_ENTRYPOINT=Hydrogen.DataCatalog.Data.Migrations
      - ApplicationContext__ApplicationName
      - ApplicationContext__ApplicationSystemName
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
    healthcheck:
      test: test -f /app/$$APP_ENTRYPOINT/success
      interval: 1s
      start_period: 1m
    depends_on:
      postgres:
        condition: service_healthy
      authn:
        condition: service_healthy
      authz:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  # Web Host
  # note: since this service extends builder, a lot of yaml sections (including environment) are inherited from shared deps
  datacatalog:
    container_name: datacatalog
    extends:
      service: builder
    image: ${RL_DOCKER_REPO_BASE}/${RL_APP_NAME}:${RL_APP_TAG}
    build:
      target: release
    environment:
      - APP_ENTRYPOINT=Hydrogen.DataCatalog.Host.Web
      - ApplicationContext__ApplicationName
      - ApplicationContext__ApplicationSystemName
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
    ports:
      - "${RL_APP_PORT}:5001"
    depends_on:
      rabbit:
        condition: service_healthy
      distribute-grants:
        condition: service_started
      datacatalog-migrations:
        condition: service_healthy
      authn:
        condition: service_healthy
      authz:
        condition: service_healthy
      shell:
        condition: service_healthy
      elasticsearch-functionaltest:
        condition: service_healthy
      elasticsearch-webtest:
        condition: service_healthy
      elasticsearch-messagingtest:
        condition: service_healthy
      elasticsearch-jobstest:
        condition: service_healthy

  # Messaging Host
  # note: since this service extends builder, a lot of yaml sections (including environment) are inherited from shared deps
  datacatalog-messaging:
    container_name: datacatalog-messaging
    extends:
      service: builder
    image: ${RL_DOCKER_REPO_BASE}/${RL_APP_NAME}:${RL_APP_TAG}
    build:
      target: release
    environment:
      - APP_ENTRYPOINT=Hydrogen.DataCatalog.Host.Messaging
      - ApplicationContext__ApplicationName
      - ApplicationContext__ApplicationSystemName
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
    ports:
      - "${RL_MESSAGING_PORT}:5001"
    depends_on:
      rabbit:
        condition: service_healthy
      authn:
        condition: service_healthy
      authz:
        condition: service_healthy
      datacatalog-migrations:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy



  # Jobs Host
  # note: since this service extends builder, a lot of yaml sections (including environment) are inherited from shared deps
  datacatalog-jobs:
    container_name: datacatalog-jobs
    extends:
      service: builder
    image: ${RL_DOCKER_REPO_BASE}/${RL_APP_NAME}:${RL_APP_TAG}
    build:
      target: release
    environment:
      - APP_ENTRYPOINT=Hydrogen.DataCatalog.Host.Jobs
      - ApplicationContext__ApplicationName
      - ApplicationContext__ApplicationSystemName
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
    ports:
      - "${RL_JOBS_PORT}:5001"
    depends_on:
      rabbit:
        condition: service_healthy
      authn:
        condition: service_healthy
      authz:
        condition: service_healthy
      datacatalog-migrations:
        condition: service_healthy

  elasticsearch-functionaltest:
    container_name: elasticsearch-functionaltest
    image: elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - "9260:9200"
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "source /in/docker-healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 6
    volumes:
      - ${RL_DOCKER_VOLS_ROOT}/deps/healthchecks/elasticsearch:/in:ro

  elasticsearch-webtest:
    container_name: elasticsearch-webtest
    image: elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - "9261:9200"
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "source /in/docker-healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 6
    volumes:
      - ${RL_DOCKER_VOLS_ROOT}/deps/healthchecks/elasticsearch:/in:ro

  elasticsearch-jobstest:
    container_name: elasticsearch-jobstest
    image: elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - "9262:9200"
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "source /in/docker-healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 6
    volumes:
      - ${RL_DOCKER_VOLS_ROOT}/deps/healthchecks/elasticsearch:/in:ro

  elasticsearch-messagingtest:
    container_name: elasticsearch-messagingtest
    image: elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - "9263:9200"
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "source /in/docker-healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 6
    volumes:
      - ${RL_DOCKER_VOLS_ROOT}/deps/healthchecks/elasticsearch:/in:ro

  # we can oveerride a small amount of the main shell definition that comes from shareed deps
  shell:
    environment:
      - Shell__LandingRoute=data-catalog